mass:
    filename: Eos/100gev/Z_uds_rec_11771_104.root
    var: MCParticle.mass
    plot: hist
    reference: Eos/100gev/Z_uds_rec_11771_104.root

#  filename: Eos/100gev/Z_uds_rec_11771_104.root

momentum_x:
    filename: Eos/100gev/Z_uds_rec_11771_104.root
    var: MCParticle.momentum.x
    plot: hist
    reference: Eos/100gev/Z_uds_rec_11771_104.root
    xlim: [-10, 14]
#  filter: 'MCParticle.momentum.y > 3'

mass_squared:
    filename: Eos/100gev/Z_uds_rec_11771_104.root
    var: MCParticle.mass
    plot: hist
    function: 'lambda x: x**2' # Arbitrary functions applied on the data are allowed

# Templates can be used in the template field and it's as if their
# parameters were inserted (non-templated fields have precedence)
# Multiple templates are allowed, with fields from the last templates in
# the list having precedence over earlier templates
template_square: &template_square
  filename: Eos/100gev/Z_uds_rec_11771_104.root
  function: 'lambda x: x**2'
  plot: hist

mass_squared_template:
  <<: *template_square
  var: MCParticle.mass

momentum_sq:
    filename: Eos/100gev/Z_uds_rec_11771_104.root
    var: [MCParticle.momentum.x, MCParticle.momentum.y, MCParticle.momentum.z]
    function: 'lambda x, y, z: np.sqrt(x**2 + y**2 + z**2)'
    plot: hist
    xlabel: '$\sqrt{p_x^2+p_y^2+p_z^2}$'
    ylabel: Entries
